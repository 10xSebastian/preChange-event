// Generated by CoffeeScript 1.3.3

/*
jQuery Plugin for having a preChange event triggered even when the field was not blured 
after the default waiting time or the one that is provided with options.delay
*/


(function() {
  var $,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  $ = jQuery;

  $.extend($.fn, {
    preChange: function(options) {
      return this.each(function() {
        if ($(this).data("_preChange_event") == null) {
          return $(this).data('_preChange_event', new PreChange(this, options));
        }
      });
    }
  });

  window.PreChange = (function() {

    function PreChange(target, options) {
      this.validate = __bind(this.validate, this);
      this.delay = (options != null) && (options.delay != null) ? options.delay : 400;
      this.target = target;
      this.delegateEvents();
      this;

      this.validates = 0;
      this.timeouts = 0;
    }

    PreChange.prototype.delegateEvents = function() {
      var validate,
        _this = this;
      validate = function(e) {
        var target;
        target = $(e.currentTarget);
        return _this.validate(e);
      };
      if (typeof this.target === "string") {
        $(document).on("keydown mousedown change", this.target, validate);
        return $(document).on("keyup", this.target, this.validate);
      } else {
        $(this.target).on("keydown mousedown change", validate);
        return $(this.target).on("keyup", this.validate);
      }
    };

    PreChange.prototype.validate = function(e) {
      var target,
        _this = this;
      target = $(e.currentTarget);
      if (target.data("lastValue") == null) {
        target.data("lastValue", target.val());
      }
      if (e.type === "change" && target.val().length === 0) {
        target.data("lastValue", "");
      }
      if (target.data("timeout") != null) {
        clearTimeout(target.data("timeout"));
        target.data("timeout", null);
      }
      return target.data("timeout", setTimeout(function() {
        if (target.data("lastValue") !== target.val()) {
          target.trigger("preChange", target.val());
        }
        target.data("lastValue", target.val());
        return target.data("timeout", null);
      }, this.delay));
    };

    return PreChange;

  })();

}).call(this);
